#!/bin/bash -e
# Interactively add a new peer to a WireGuard configuration
# This script is build for systemd-networkd's netdev-files,
# but should be easily convertible for wg-quick
#   created by Eicke Herbertz, 2020

test_input() {
    if [[ -z "$3" ]]; then
        echo "$1 cannot be empty!"
        return 1
    fi

    if grep -q "^$2$3\$" "${NETDEV}"; then
        echo "A peer with this $1 already exists!"
        return 1
    fi
}

add_peer() {
    echo -n "Name: "
    read name

    test_input "Name" "# " "${name}" || return

    echo -n "PublicKey: "
    read pubkey

    test_input "PublicKey" "PublicKey = " "${pubkey}" || return

    echo -n "AllowedIPs (including prefix length): "
    read allowedips

    test_input "AllowedIPs" "AllowedIPs = " "${allowedips}" || return

    CONFIG="[WireGuardPeer]\n"
    CONFIG+="# ${name}\n"
    CONFIG+="# Added by ${SUDO_USER:-${USER}} at $(date +%F)\n"
    CONFIG+="PublicKey = ${pubkey}\n"
    CONFIG+="AllowedIPs = ${allowedips}\n"
    
    echo -e "\n${CONFIG}"
    echo -n "Add this configuration to ${NETDEV}? [Y/n] "
    read add

    if [[ -z "${add}" || "${add}" == "Y" || "${add}" == "y" ]]; then
        echo -e "${CONFIG}" >> "${NETDEV}"
        echo -n "OK. "
    fi

    INTERFACE=$(awk '/Name = /{print $3}' ${NETDEV})

    echo -n "Add this configuration to running interface ${INTERFACE}? [Y/n] "
    read add

    if [[ -z "${add}" || "${add}" == "Y" || "${add}" == "y" ]]; then
        wg set ${INTERFACE} peer ${pubkey} allowed-ips ${allowedips}
        echo -n "OK. "
    fi
}

if [[ $UID -ne 0 && ! $WG_TEST ]]; then
    echo "Privilege elevation..." >&2
    sudo $0 $@
    exit $?
fi

DEFAULT_NETDEV=$(ls /etc/systemd/network/*.netdev | grep -E 'wg|wireguard' | head -1)
NETDEV=${1:-${DEFAULT_NETDEV}}

echo "Add WireGuard peer(s) to ${NETDEV##*/}"

cont="y"
while [[ "${cont}" == "y" || "${cont}" == "Y" ]]; do
    add_peer
    echo -n "Add another peer? [y/N] "
    read cont
done
